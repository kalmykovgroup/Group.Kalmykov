user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;
 


events {
    worker_connections  1024;
      # multi_accept on;
}


 http { 

           map $http_connection $connection_upgrade {
            "~*Upgrade" $http_connection;
            default keep-alive;
          }

 
         server {
                listen 80;

                 server_name ${APP_DOMAIN};

				# делаем переадресацию с HTTP на HTTPS
                location / {
                        return 301 https://$host$request_uri;
                }

				# URL certbot'a, где он будет слушать входящие
				# подключения во время выдачи SSL
                  location ~ /.well-known {
                    root /usr/share/nginx/html;
                    allow all;
                }


         }

       # server {
            #    listen       443 ssl http2;

             #   keepalive_timeout   70;

             #   ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
            #    ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
            #    ssl_certificate     /usr/local/nginx/conf/cert.pem;
            #    ssl_certificate_key /usr/local/nginx/conf/cert.key;
            #    ssl_session_cache   shared:SSL:10m;
            #    ssl_session_timeout 10m;


             #    location / {
	         #       root /usr/share/nginx/html;
	         #       index index.html index.htm;
	        #        try_files $uri/ /index.html =404;
            #    }
         

           #   location /api {
           #     proxy_pass         https://server:8081;
             #   proxy_http_version 1.1;
             #   proxy_set_header   Upgrade $http_upgrade;
            #    proxy_set_header   Connection $connection_upgrade;
            #    proxy_set_header   Host $host;
           #     proxy_cache_bypass $http_upgrade;
           #     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
           #     proxy_set_header   X-Forwarded-Proto $scheme;
       #     }
       # }

     

      
} 

 

 