user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;
 


events {
    worker_connections  1024;
      # multi_accept on;
}


 http { 

       map $http_connection $connection_upgrade {
    "~*Upgrade" $http_connection;
    default keep-alive;
  }

 
         server {
                listen 80;

				# делаем переадресацию с HTTP на HTTPS
                location / {
                        return 301 https://$host$request_uri;
                }

				# URL certbot'a, где он будет слушать входящие
				# подключения во время выдачи SSL
                location /.well-known {
                        proxy_pass http://certbot:6000;
                }
        }

        server {
                listen       443 ssl http2;

                          location / {
	                root /usr/share/nginx/html;
	                index index.html index.htm;
	                try_files $uri/ /index.html =404;
                }

				# сертификаты мы уже примонтировали в Docker Compose
                ssl_certificate     /etc/cert.pem;
                ssl_certificate_key /etc/key.pem;

				location / {
	            root /usr/share/nginx/html;
	            index index.html index.htm;
	            try_files $uri/ /index.html =404;
            }

              location /api {
                proxy_pass         https://server:8081;
                proxy_http_version 1.1;
                proxy_set_header   Upgrade $http_upgrade;
                proxy_set_header   Connection $connection_upgrade;
                proxy_set_header   Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto $scheme;
            }
        }

     

      
} 

 

 